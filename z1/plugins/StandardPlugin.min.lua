require"z1.plugins.Plugin"STANDARD_ATOM_RADIUS=9;StandardPlugin={}function StandardPlugin:new(a)local b=StandardPlugin;local c=Plugin:new(a)setmetatable(self,b)self.__index=c;return b end;function StandardPlugin:drawAtom()for d,e in ipairs(self.atoms)do local f=e["symbol"]local g=self.center_x+e["x"]local h=self.center_y+e["y"]if f=="X"then goto i end;self.svg:text(e["symbol"],g,h)local j=e["charge"]if j~=0 then if j==1 then j="+"end;if j==-1 then j="-"end;self.svg:subtext(j,g+STANDARD_ATOM_RADIUS,h-STANDARD_ATOM_RADIUS)end::i::end;return nil end;STANDARD_DISTANCE_BETWEEN_LIGATIONS=20;STANDARD_WAVES={{0},{STANDARD_DISTANCE_BETWEEN_LIGATIONS/2,-STANDARD_DISTANCE_BETWEEN_LIGATIONS/2},{STANDARD_DISTANCE_BETWEEN_LIGATIONS,0,-STANDARD_DISTANCE_BETWEEN_LIGATIONS}}function StandardPlugin:drawLigation()for d,k in pairs(self.ligations)do local l=k.from;local m=k.to;if m.symbol=="X"then goto i end;local n=self.center_x+l.x;local o=self.center_y+l.y;local p=self.center_x+m.x;local q=self.center_y+m.y;local r=STANDARD_WAVES[k.eletrons]local s=math.atan(q-o,p-n)local t=math.pi+s;if k.type~="i√¥nica"then for d,u in ipairs(r)do local v=n+math.cos(s-math.pi*u/180)*STANDARD_ATOM_RADIUS;local w=o+math.sin(s-math.pi*u/180)*STANDARD_ATOM_RADIUS;local x=p+math.cos(t+math.pi*u/180)*STANDARD_ATOM_RADIUS;local y=q+math.sin(t+math.pi*u/180)*STANDARD_ATOM_RADIUS;self.svg:line(v,w,x,y)end end::i::end;return nil end